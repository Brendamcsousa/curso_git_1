# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dS4WNnfbVmjTstqLWKsKffVKMUTpZUYp
"""

import os
import pandas as pd

# Carregar o arquivo CSV
file_path = 'Movies_Romance_sem_colunas.csv'
df_original = pd.read_csv(file_path)

# Separar as colunas necessárias para a tabela de filmes
df_filmes = df_original[['id', 'titulopincipal', 'titulooriginal', 'anolancamento', 'tempominutos', 'genero', 'notamedia', 'numerovotos']]

# Criar uma tabela única para os artistas
df_artistas = pd.DataFrame(columns=['idFilme', 'generoartista', 'nomeartista', 'profissao'])

# Criar uma tabela para as avaliações
df_avaliacoes = pd.DataFrame(columns=['idFilme', 'idArtista', 'notaAvaliacao'])

# Iterar sobre cada linha do DataFrame original para criar as entradas nas tabelas de artistas e avaliações
for _, row in df_original.iterrows():
    id_filme = row['id']
    genero_artista = row['generoartista']

    # Certificar-se de que há nomes de artistas correspondentes
    if pd.notna(row['nomeartista']):
        nomes_artistas = row['nomeartista'].split(',')
        profissoes = row['profissao'].split(',') if pd.notna(row['profissao']) else ['']

        # Certificar-se de que as listas têm o mesmo comprimento
        min_length = min(len(nomes_artistas), len(profissoes))

        # Adicionar as entradas na tabela de artistas
        df_artistas = df_artistas.append(pd.DataFrame({
            'idFilme': [id_filme] * min_length,
            'generoartista': [genero_artista] * min_length,
            'nomeartista': nomes_artistas[:min_length],
            'profissao': profissoes[:min_length]
        }), ignore_index=True)

        # Adicionar as entradas na tabela de avaliações, se a coluna 'notaavaliacao' estiver presente
        if 'notaavaliacao' in df_original.columns:
            notas_avaliacoes = row['notaavaliacao'].split(',') if pd.notna(row['notaavaliacao']) else ['']
            df_avaliacoes = df_avaliacoes.append(pd.DataFrame({
                'idFilme': [id_filme] * len(notas_avaliacoes),
                'idArtista': range(len(notas_avaliacoes)),
                'notaAvaliacao': notas_avaliacoes
            }), ignore_index=True)

# Obter o diretório atual
current_dir = os.getcwd()

# Salvar as tabelas em arquivos CSV
file_filmes = os.path.join(current_dir, 'Movies_Romance_Filmes.csv')
file_artistas = os.path.join(current_dir, 'Movies_Romance_Artistas.csv')
file_avaliacoes = os.path.join(current_dir, 'Movies_Romance_Avaliacoes.csv')

df_filmes.to_csv(file_filmes, index=False)
df_artistas.to_csv(file_artistas, index=False)
df_avaliacoes.to_csv(file_avaliacoes, index=False)

# Imprimir os caminhos dos arquivos
print("Caminho do arquivo de filmes:", file_filmes)
print("Caminho do arquivo de artistas:", file_artistas)
print("Caminho do arquivo de avaliações:", file_avaliacoes)

print("Tabelas normalizadas e salvas com sucesso!")

